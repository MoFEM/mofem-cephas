INTRODUCTION
============

This file describes how to install  MoFEM. The instructions in this file are
one for the most common cases, and cover command line tools.

DOWNLOAD & UPDATES
==================

INDEX

What is an "out-of-source" build?
=================================

When your build generates files, they have to go somewhere. An in-source build
puts them in your source tree. An out-of-source build puts them in a completely
separate directory, so that your source tree is unchanged.  In the first
example, an in-place build is performed, i.e., the binaries are placed in the
same directory as the source code.

Example in-surce build (not recomended)
  cd mofem
cmake -DCMAKE_BUILD_TYPE=Release -DPETSC_DIR=/opt/petsc-3.3-p5_openmpi-1.6.3 -DPETSC_ARCH=arch-linux2-c-opt -DMOAB_DIR=/opt/local-moab-4.6.0/  
  make

In the second example, an out-of-place build is performed, i.e., the source
code, libraries, and executables are produced in a directory separate from the
source code directory(ies).

#example out-of-source build 
  mkdir build_debug
  cd build_debug
cmake -DCMAKE_BUILD_TYPE=Debug -DPETSC_DIR=/opt/petsc-3.3-p5_openmpi-1.6.3 -DPETSC_ARCH=arch-linux2-c-opt -DMOAB_DIR=/opt/local-moab-4.6.0/  ../mofem/mofem_v0.0.1/ 
  make

#example out-of-source build (releas version)
  mkdir build_releas
  cd build_release
cmake -DCMAKE_BUILD_TYPE=Release -DPETSC_DIR=/opt/petsc-3.3-p5_openmpi-1.6.3 -DPETSC_ARCH=arch-linux2-c-opt -DMOAB_DIR=/opt/local-moab-4.6.0/  ../mofem/mofem_v0.0.1/ 
  make

Out-of-source builds are recommended, as you can build multiple variants in
separate directories, e.g., MoFem_Debug (-DCMAKE_BUILD_TYPE=Debug),
YaFFEMS_Release (-DCMAKE_BUILD_TYPE=Release).  Note: Before performing an
out-of-source build ensure that any possible CMake generated in-source build
information is removed from the source directory, e.g., CMakeFiles directory,
and CMakeCache.txt.

Some build trees created with GNU autotools have a "make distclean" target that
cleans the build and also removes Makefiles and other parts of the generated
build system. CMake does not generate a "make distclean" target because
CMakeLists.txt files can run scripts and arbitrary commands; CMake has no way
of tracking exactly which files are generated as part of running CMake.
Providing a distclean target would give users the false impression that it
would work as expected. (CMake does generate a "make clean" target to remove
files generated by the compiler and linker.)

A "make distclean" target is only necessary if the user performs an in-source
build. CMake supports in-source builds, but we strongly encourage users to
adopt the notion of an out-of-source build. Using a build tree that is separate
from the source tree will prevent CMake from generating any files in the source
tree. Because CMake does not change the source tree, there is no need for a
distclean target. One can start a fresh build by deleting the build tree or
creating a separate build tree.

You can find more here
http://www.cmake.org/Wiki/CMake_FAQ#Out-of-source_build_trees


DOXYGEN DOCUMENTATION
=====================

The configuration file for Doxygen is located in root source directory. To run
documentation simply run doxygen from root sorce directory. Documentation could
be accessed from web browser, where file index.html is located in directory
($MOFEM_SOURCE_DIR/html/index.html)


PREREQUISITES
=============

To install MoFEM, you need 'cmake' and several third-party libraries.
   * CMake (>= 2.6), the build system used by YaFFEMS
     http://www.cmake.org/
   * petsc (>=petsc-3.3)
   * moab (>= 4.6.0)

CONFIGURATION OF PETSC AND MOAB
===============================

...


