#!python
cubit.cmd('reset')
cubit.cmd('create vertex -85 0 0')
cubit.cmd('create vertex 85 0 0')
cubit.cmd('create vertex 0 85 0')
cubit.cmd('create curve vertex 1 vertex 2 vertex 3 circular')
cubit.cmd('create surface circle radius 5 yplane')
cubit.cmd('move surface 1 location -85 0 0 include_merged')
cubit.cmd('sweep surface 1 along curve 1')
cubit.cmd('delete vertex all')
cubit.cmd('delete curve all')
cubit.cmd('create brick x 200 y 178 z 20')
cubit.cmd('intersect volume all')
cubit.cmd('volume 2 copy')
cubit.cmd('Volume 3 reflect origin 0 89 0 direction 0 1 0')
#cubit.cmd('brick x 30 y 5 z 30')
#cubit.cmd('move volume 4 x 85 y 180.5 z 0')

cubit.cmd('imprint volume all')
cubit.cmd('merge volume all')
cubit.cmd('compress all')

cubit.cmd('volume all size auto factor 7')
cubit.cmd('volume all scheme tetmesh')
cubit.cmd('mesh volume all')

inlet = [3,7]
outlet =[2,6]

#Node inside the volume for factor 5
zeroPressureNode=[62,470]

cubit.cmd('delete block all')
cubit.cmd('delete pressure all')
cubit.cmd('delete nodeset all')
cubit.cmd('delete sideset all')

aa=0
while aa<len(inlet):
    cubit.cmd('block ' + str(aa+1) + ' volume ' + str(aa+1) )
    cubit.cmd('block ' + str(aa+1) + ' name "PotentialFlow' + str(aa+1) +'"' )
    cubit.cmd('create pressure on surface ' + str(inlet[aa]) + ' magnitude 0.00001')
    cubit.cmd('create pressure on surface ' + str(outlet[aa]) + ' magnitude -0.00001')
    cubit.cmd('nodeset ' + str(aa+1) + ' node ' + str(zeroPressureNode[aa]) )
    cubit.cmd('nodeset ' + str(aa+1) + ' name "ZeroPressure' + str(aa+1) + '"')
    aa = aa + 1
 

#interfaces between fibres
interface1 = [ 4 ]
interface = interface1

aa=0
while aa<len(interface):
    cubit.cmd('sideset ' + str(aa+5) + ' surface ' + str(interface[aa]) )
    cubit.cmd('sideset ' + str(aa+5) + ' name "interface' + str(aa+1) + '"')
    aa = aa + 1
 
#Applying Mechanical Boundary Conditions
cubit.cmd('create displacement on surface 2 7 dof all fix 0')
cubit.cmd('create displacement on surface 3 dof 2 dof 3 fix 0')
cubit.cmd('create force on surface 6 vector 0 10 0 0 0 0')
#cubit.cmd('create force on surface 11 vector 0 10 0 0 0 0')

cubit.cmd('set duplicate block elements on')  

cubit.cmd('block 3 volume 1 2')    
cubit.cmd('block 3 name "MAT_TRANSISO_1" ')    
cubit.cmd('block 3 attribute count 5')    
#Young's modulus in xy plane (Ep)  
cubit.cmd('block 3 attribute index 1 135000')    
#Young's modulus in z-direction (Ez)   
cubit.cmd('block 3 attribute index 2 135000')    
#Poisson's ratio in xy plane (vp)  
cubit.cmd('block 3 attribute index 3 0.2')    
#Poisson's ratio in z-direction (vpz)  
cubit.cmd('block 3 attribute index 4 0.15')    
#Shear modulus in z-direction (Gzp)  
#cubit.cmd('block 3 attribute index 5 0')   

cubit.cmd('block 4 volume 3  ')    
cubit.cmd('block 4 name "MAT_ELASTIC_1" ')    
cubit.cmd('block 4 attribute count 2')    
#Young's modulus of Steel Clamps (E)  
cubit.cmd('block 4 attribute index 1 200000 ')    
#Poisson's ration (nu)  
cubit.cmd('block 4 attribute index 2 0.3')    

cubit.cmd('block 5 surface 4')  
  
cubit.cmd('block 5 name "MAT_INTERF_1"')  
cubit.cmd('block 5 attribute count 4')  
cubit.cmd('block 5 attribute index 1 0.5')  
cubit.cmd('block 5 attribute index 2 0.0')  
cubit.cmd('block 5 attribute index 3 0.1')  
cubit.cmd('block 5 attribute index 4 0.2')  

cubit.cmd('save as "/Users/zahur/Documents/moFEM/mofem-joseph/mofem-joseph/mofem_v0.1/examples/rope/pisces.cub" overwrite')
 






