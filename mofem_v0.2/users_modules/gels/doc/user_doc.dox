/*! \page gel_model_example Gel Model (Usage example)

This is example how to run a simple problem for gel model with
visocus-relaxation. Is is dedicated for beginners starting work with MoFEM.

In this model mechanical and solvent concentration field is modeled. In addition
viscous relaxation is taken into account by considering model with two springs
and dashpot, with additional internal state variable. Detail about
implementation and equations can be found in structure \ref Gel

\tableofcontents

\section gel_brick Analysis of simple gel brick

\subsection gel_input_file Input files

It is assumed that user parent working directory is \em users_modules/gel in
build directory.

\subsubsection journal Journal file

Mesh file with boundary conditions is created in Cubit journal file with
prismatic bar (brick_of_gel.jou),
\include users_modules/gels/meshes/brick_of_gel.jou

\subsubsection gel_material_file Defining material properties

Material properties file (gel_config.in).
\include users_modules/gels/gel_config.in

Native constitutive model is implemented after Yuhang Hu and Zhigang Suo \cite hu2012viscoelasticity.
\image html gel_spring_daspot_model.png "Gel model" width=6cm

In basic implementations all springs and dashpot are implemented using Hook'e
equation. However generalization to large deformations and displacements is
straightforward, code uses automatic differentiation (ADOL-C), and user need
only implement stress-strain physical equation and all tangent matrices are
calculated automatically.

For more details about model implementation, equations and physical constants
look here \ref Gel::ConstitutiveEquation

\subsection execution Executing code

Example how to execute example problem:

\code
mpirun -np 4 ./gel_analysis \
  -my_file brick_of_gel.cub \
  -my_gel_config gel_config.in \
  -ksp_type fgmres -ksp_final_residual \
  -ksp_atol 1e-10 -ksp_rtol 1e-10 \
  -ksp_monitor -ksp_converged_reason \
  -pc_type lu -pc_factor_mat_solver_package mumps \
  -snes_atol 1e-8 -snes_rtol 1e-8 \
  -snes_type newtonls -snes_linesearch_type basic \
  -snes_linesearch_monitor -snes_monitor \
  -ts_type beuler -ts_dt 0.1 -ts_final_time 10  \
  -ts_monitor
\endcode

Notes:

  - Option \em -my_file gives name of mesh file

  - Option \em -my_gel_config give name of material config file

  - Time integration scheme is controlled by \em -ts_type, look to PETSc manual
  for more details.

  - Resolution of post-processing mesh is set by \em -my_max_post_proc_ref_level
  0. If more than 0, i.e. 1,2,... a denser post-processing mesh is generated.
  This results in biger size of post processing files and compromise overall
  efficiency.

  - Option \em -snes_atol control absolute tolerance of nonlinear solver, should be bigger
  than ksp_atol 1e-10

  - Option \em -snes_rtol control relative tolerance of nonlinear solver

  - Using \em -my_output_prt 1, each time step is post-processed.

Result:

Example of animation obtained from this example for approximation order 4

\image html gel_simple_anim.gif "Gel brick" width=6cm


\subsection paraview VTK files for paraview

Running dynamic analysis out_values_1.h5m, out_values_2.h5m, ... are created for
each time step. Post-processing mesh in output fails is stored in native MoAB
data format using standard h5m.

VTK files can be generated using script located in \em
users_modules/nonlinear_elasticity/do_vtk.sh. For example
\code
../nonlinear_elasticity/do_vtk.sh out_*h5m
\endcode

\subsection user_gel_constitutive_equation User (hackable) constitutive equation

In file \ref UserGelModel.hpp user can implement own constitutive equation, for
details see \ref UserGelConstitutiveEquation. Any change in \ref
UserGelModel.hpp have to follow rebuilding the code
\code
$um_debug/gels make
\endcode

Similiar (not exact) method is used to implement general nonlinear elastic
materials, see for example \ref NeoHookean.hpp or \ref Hooke.hpp

*/
