/*! \page gel_model Gel Model (Usage example)
\ingroup gel

This is simple example how to run a simple problem for gel model with
visocus-relaxation. Is is directed for beginners starting work with MoFEM.

In this model mechanical and solvent concentration field is modeled. In addition
viscous relaxation is taken into account by considering model with two springs
and dashpot, with additional internal state variable. Detail about
implementation and equations can be found in structure \ref Gel

\section gel_brick Analysis of simple gel brick

\subsection gel_input_file Input files

Following description and line commands are in presumption that user parent
working directory is \em users_modules/gel in build directory. All input files
used in this example can be found in build directory.

\subsubsection journal Journal file

Mesh file with boundary conditions is created in Cubit journal file with
prismatic bar (brick_of_gel.jou),
\code
reset
set duplicate block elements on

brick x 1 y 1 z 1

# Sete block with volume with gel material
block 1 volume all
block 1 name 'GEL'

# Set Dirichelt boundary condition for solvent concentration
block 2 surface 4
block 2 name 'CONCENTRATION'
block 2 attribute count 1
block 2 attribute index 1 0

# Set solvent flux, i.e. Neumann boundary condition
block 4 surface 6
block 4 name 'SOLVENT_FLUX'
block 4 attribute count 1
block 4 attribute index 1 0

# Kinematic boundary condition for mechanical field
create displacement on surface 4 dof 1 dof 2 dof 3 fix 0

# Static boundary condition, i.e. pressure
create pressure  on surface 6 magnitude 1

# Make a mesh
volume all scheme Tetmesh
volume all size auto factor 8
mesh volume all

# Set block 3 and set 10 node tetrahedrons in that block
block 3 tet all
block 3 element type TETRA10
\endcode

\subsubsection gel_material_file Defining material properties

Material properties file (gel_config.in). For more details about model
parameters look here \ref ConstitutiveEquation

Native constitutive model is implemented after
Yuhang Hu and Zhigang Suo. Viscoelasticity and poroelasticity in elastomeric
gels. Acta Mechanica Solida Sinica, Vol. 25, No. 5

\image html gel_spring_daspot_model.png "Gel model" width=6cm

In basic implementations all springs and dashpot are implemented like Hook'e
equation. However generalization to large deformations and displacements is
straightforward, code uses automatic differentiation (ADOL-C), and user need
only implement stress-strain physical equation and all tangent matrices are
calculated automatically.


\code
# Material parameters for Gel material model

# Spring Alpha
gAlpha = 1
vAlpha = 0

# Spring Beta
gBeta = 1
vBeta = 0

# Daspot
gBetaHat = 1
vBetaHat = 0

# Volume per solvent molecule
oMega = 1

# Solvent transport material parameters
vIscosity = 1
pErmeability = 1

# User can set approximation order for each blocks independently
# Set approximation order of block 1 as quadratic function.

[block_1]

oRder = 2
\endcode

where first column represents time and second column represent force multiplier.

\subsection execution Executing code

Example how to execute example problem
\code
mpirun -np 1 ./gel_analysis \
  -my_file brick_of_gel.cub -ksp_type fgmres -ksp_final_residual \
  -ksp_monitor -ksp_converged_reason \
  -pc_type lu -pc_factor_mat_solver_package mumps \
  -snes_monitor  \
  -ts_type beuler -ts_dt 0.1 -ts_final_time 10  -snes_linesearch_type basic  -ts_monitor -my_gel_config gel_config.in

mpirun -np 4  ../../nonlinear_dynamics \
  -my_file rod.cub \
  -ksp_type fgmres -pc_type lu -pc_factor_mat_solver_package mumps -ksp_atol 1e-12 -ksp_rtol 1e-12 \
  -snes_monitor -snes_type newtonls -snes_linesearch_type basic -snes_max_it 10 -snes_atol 1e-8 -snes_rtol 1e-8 \
  -ts_monitor -ts_type alpha -ts_dt 0.01 -ts_final_time 4 -ts_max_snes_failures -1  \
  -my_output_prt -1 -my_max_post_proc_ref_level 0  \
  -my_disp_order 2 -my_time_data_file rod_history.in -default_material NEOHOOKEAN 2>&1 | tee log
\endcode

\subsection paraview VTK files for paraview

Running dynamic analysis out_values_1.h5m, out_values_2.h5m, ... are created
for each time step. Post-processing mesh in output fails is stored in native MoAB data format
using standard h5m.

VTK files can be generated using script located in \em users_modules/nonlinear_elasticity/do_vtk.sh. For example
\code
../nonlinear_elasticity/do_vtk.sh out_*h5m
\endcode

*/
