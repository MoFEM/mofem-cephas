#!python
#To create RVE for all the three type of boundary conditions, i.e. (Linear dispacemet, traction and periodic)

cubit.cmd('new')

autofactor=10; 
cubit.cmd('brick x 1 y 1 z 1')

cubit.cmd('brick x 1 y 0.4 z 0.4')

cubit.cmd('subtract volume 2 from volume 1 keep')
cubit.cmd('delete volume 1') 
cubit.cmd('imprint volume 2 3')   
cubit.cmd('merge volume 2 3') 

cubit.cmd('surface 20 scheme trimesh') 
str1='surface 20  size auto factor '+str(autofactor); cubit.cmd(str1)
cubit.cmd('mesh surface 20') 
cubit.cmd('surface 22 scheme copy source surface 20 source vertex 27 target vertex 26 source curve 47 target curve 48 nosmoothing')
cubit.cmd('mesh surface 22') 

cubit.cmd('surface 10 scheme trimesh') 
str1='surface 10  size auto factor '+str(autofactor); cubit.cmd(str1)
cubit.cmd('mesh surface 10') 
cubit.cmd('surface 12 scheme copy source surface 10 source vertex 11 target vertex 10 source curve 23 target curve 24 nosmoothing')
cubit.cmd('mesh surface 12') 

cubit.cmd('surface 17 scheme trimesh') 
str1='surface 17  size auto factor '+str(autofactor); cubit.cmd(str1)
cubit.cmd('mesh surface 17') 
cubit.cmd('surface 18 scheme copy source surface 17 source vertex 26 target vertex 29 source curve 38 target curve 44 nosmoothing')
cubit.cmd('mesh surface 18') 

cubit.cmd('surface 19 scheme trimesh') 
str1='surface 19  size auto factor '+str(autofactor); cubit.cmd(str1)
cubit.cmd('mesh surface 19') 
cubit.cmd('surface 21 scheme copy source surface 19 source vertex 28 target vertex 27 source curve 45 target curve 47 nosmoothing')
cubit.cmd('mesh surface 21') 

str1='volume all size auto factor '+str(autofactor); cubit.cmd(str1)
cubit.cmd('volume all scheme tetmesh')  
cubit.cmd('mesh volume all')  

cubit.cmd('set duplicate block elements on')         
vol=['3', '2']         
mat=['MAT_THERMAL_MATRIX','MAT_THERMAL_FIBRES']     
Conductivity=[1, 0.1]   
Capcity=[1, 1]
block_id=1
for i in range(0, 2):         
    str1='block ' + str(block_id) +' volume '+vol[i]; cubit.cmd(str1)         
    str1='block ' + str(block_id) +' name "'+mat[i] + '"'; cubit.cmd(str1)      
    str1='block ' + str(block_id) +' attribute count 2'; cubit.cmd(str1)      
    str1='block ' + str(block_id) +' attribute index 1 '+str(Conductivity[i]); cubit.cmd(str1)
    str1='block ' + str(block_id) +' attribute index 2 '+str(Capcity[i]); cubit.cmd(str1)
    block_id=block_id+1      

cubit.cmd('sideset 101 surface 20 10 19 18')  # all -ve boundary surfaces  
cubit.cmd('sideset 102 surface 21 17 22 12')  # all +ve boundary surfaces  
cubit.cmd('sideset 103 surface 20 10 19 18 21 17 22 12')  # all boundary surfaces  

cubit.cmd('save as "/Users/zahur/Documents/moFEM/mofem-cephas/mofem_v0.2/users_modules/degradation_model/meshes/Cube_RVE_with_reinf_thermal.cub" overwrite')







