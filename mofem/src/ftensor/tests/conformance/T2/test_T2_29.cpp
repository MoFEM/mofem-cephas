#include "../../../src/FTensor.hpp"
#include "../test_for_zero.hpp"
#include <iostream>
using namespace FTensor;
using namespace std;

void test_T2_29(const Tensor2<double, 4, 3> &t2_4,
                const Tensor2<double, 3, 4> &t2_5)
{
  Index<'i', 4> i;
  Index<'j', 3> j;
  Index<'k', 3> k;

  /* Tensor2 tests */

  /* Tensor2*Tensor2 */
  Tensor2<double, 3, 3> t2;

  t2(j, k) = t2_4(i, j) * t2_5(k, i);
  test_for_zero(t2(0, 0)
                  - (t2_4(0, 0) * t2_5(0, 0) + t2_4(1, 0) * t2_5(0, 1)
                     + t2_4(2, 0) * t2_5(0, 2) + t2_4(3, 0) * t2_5(0, 3)),
                "T2(i,j)*T2(k,i)(0,0)");
  test_for_zero(t2(0, 1)
                  - (t2_4(0, 0) * t2_5(1, 0) + t2_4(1, 0) * t2_5(1, 1)
                     + t2_4(2, 0) * t2_5(1, 2) + t2_4(3, 0) * t2_5(1, 3)),
                "T2(i,j)*T2(k,i)(0,1)");
  test_for_zero(t2(0, 2)
                  - (t2_4(0, 0) * t2_5(2, 0) + t2_4(1, 0) * t2_5(2, 1)
                     + t2_4(2, 0) * t2_5(2, 2) + t2_4(3, 0) * t2_5(2, 3)),
                "T2(i,j)*T2(k,i)(0,2)");
  test_for_zero(t2(1, 0)
                  - (t2_4(0, 1) * t2_5(0, 0) + t2_4(1, 1) * t2_5(0, 1)
                     + t2_4(2, 1) * t2_5(0, 2) + t2_4(3, 1) * t2_5(0, 3)),
                "T2(i,j)*T2(k,i)(1,0)");
  test_for_zero(t2(1, 1)
                  - (t2_4(0, 1) * t2_5(1, 0) + t2_4(1, 1) * t2_5(1, 1)
                     + t2_4(2, 1) * t2_5(1, 2) + t2_4(3, 1) * t2_5(1, 3)),
                "T2(i,j)*T2(k,i)(1,1)");
  test_for_zero(t2(1, 2)
                  - (t2_4(0, 1) * t2_5(2, 0) + t2_4(1, 1) * t2_5(2, 1)
                     + t2_4(2, 1) * t2_5(2, 2) + t2_4(3, 1) * t2_5(2, 3)),
                "T2(i,j)*T2(k,i)(1,2)");
  test_for_zero(t2(2, 0)
                  - (t2_4(0, 2) * t2_5(0, 0) + t2_4(1, 2) * t2_5(0, 1)
                     + t2_4(2, 2) * t2_5(0, 2) + t2_4(3, 2) * t2_5(0, 3)),
                "T2(i,j)*T2(k,i)(2,0)");
  test_for_zero(t2(2, 1)
                  - (t2_4(0, 2) * t2_5(1, 0) + t2_4(1, 2) * t2_5(1, 1)
                     + t2_4(2, 2) * t2_5(1, 2) + t2_4(3, 2) * t2_5(1, 3)),
                "T2(i,j)*T2(k,i)(2,1)");
  test_for_zero(t2(2, 2)
                  - (t2_4(0, 2) * t2_5(2, 0) + t2_4(1, 2) * t2_5(2, 1)
                     + t2_4(2, 2) * t2_5(2, 2) + t2_4(3, 2) * t2_5(2, 3)),
                "T2(i,j)*T2(k,i)(2,2)");
}
