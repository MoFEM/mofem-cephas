/*! \mainpage Index Page

\htmlinclude doc/search_tags.html

\section introduction Introduction

MoFEM (Mesh Oriented Finite Element Method) it is C++ library supporting
solution of finite elements problems. Is developed to o provide free and open,
inclusive, participation community finite element code for engineers, students
and academics.

MoFEM is a finite element analysis code tailored for the solution of
multi-physics problems with arbitrary levels of approximation, different levels
of mesh refinement and optimised for high-performance computing. It is design
to be able manage complexities related to heterogeneous order of approximations
for L2,H1,H-div and H-curl spaces, see \cite NME:NME847.

MoFEM is the blend of the Boost MultiIndex containers, MOAB (Mesh Oriented
Database) \cite tautges_moab:2004 and PETSc (Portable, Extensible Toolkit for
Scientific Computation) \cite petsc-web-page. MoFEM is developed in C++ and it
is open-source software under the GNU Lesser General Public License (see \ref legal_stuff)
Stuff).

MoFEM can read and write number of mesh file formats using functionality
provided by MoAB.  The current version of MoFEM has full support for
CUBIT/TRELIS, TetGEN, NetGEN for pre-processing and ParaView for
post-processing.

\tableofcontents

\section Motivation

Building a scientific simulation environment for finite element methods is a
complicated task. The greatest part of finite element code development is often
expended in dealing with technical problems related to software implementation,
rather than resolving the underlying physics that the code is intended to
tackle.

The demand for accurate solution of increasingly complicated real-world problems
means that the underlying data structures also become increasingly complicated.
This is particularly evident with multi-physics, hp-adaptivity, and/or evolving
geometries (e.g. crack propagation). Established commercial software is often
limited in this respect, or can be relatively slow to adopt new technologies.
This is the problem that MoFEM attempts to work around, recognising that it is
increasingly necessary for engineers, scientists and mathematicians to carry out
calculations using several mesh refinements, different approximation orders,
multiple degrees of freedom and/or different scales.

MoFEM library itself is designed to be small, modular and extendable. Itself it
is not library of finite elements solving particular problems of continuum
mechanics, f.e. problem of thermal conduction. That is implemented in \em users
\em modules using MoFEM. \em User \em module in principle is independent
project, located in its own repository, which can be public or private. Can have
is own copyright and license. Such flexibility, allowing for privacy and
different licensing parts of the code, is designed for needs both of academics
add industry. Since each \em user \em module is implemented with MoFEM, using
its internal database, data between modules can be exchanged without prior
knowledge how each module is developed.

\section download_repository MoFEM repository

- Version repository <https://bitbucket.org/likask/mofem-cephas>
- Testing webpage (CDash) <http://cdash.eng.gla.ac.uk/cdash/>
- Current build status of latest branch push (Drone.io) \htmlonly
<a href="https://drone.io/bitbucket.org/likask/mofem-cephas/latest">
<img border="0" alt="drone.io" src="https://drone.io/bitbucket.org/likask/mofem-cephas/status.png">
</a>
\endhtmlonly


\section users_modules User modules

List of some user modules,
- Obsolete (Elements and methods used by some modules no longer developed, not recommend
to use in new developments) <https://bitbucket.org/likask/mofem_um_obsolete>
- Homogenistaion <https://bitbucket.org/likask/mofem_um_homogenisation>
- Fracture Mechanics <https://bitbucket.org/likask/mofem_um_fracture_mechanics>
- Gel Models <https://bitbucket.org/likask/mofem_um_gels>
- Small strain plasticity <https://bitbucket.org/likask/mofem_um_small_strain_plasticity>
- Solid Shell Prism Element <https://bitbucket.org/likask/mofem_um_solid_shell_prism_element>
- Minimal surface equation <https://bitbucket.org/likask/mofem_um_minimal_surface_equation>
- Bone remodeling <https://bitbucket.org/likask/mofem_um_bone_remodelling>

\section contact Contact us and get involved

Contributions are welcome and is an important part of the open spirit of the
project. It's hoped a community will develop around the project whose
contributions will improve it further.

- Contact: <cmatgu@googlegroups.com>
- Discussion channel: <https://mofem.slack.com/>

\section twitter_and_google_plus Recent developments and news

\htmlinclude doc/twitter_widged.html

See as well Google+ <https://plus.google.com/110439315415517980382/posts>

\section thrid_party Third party libraries

List of third party libraries and packages used by MoFEM:

- SIGMA Tools <http://press3.mcs.anl.gov/sigma/meshkit-library/>
- MOAB <http://www.mcs.anl.gov/~fathom/moab-docs/html/userguide.html>.
- PETSc <http://www.mcs.anl.gov/petsc/documentation/index.html>
- BOOST <http://www.boost.org>
	- uBlas <http://www.boost.org/doc/libs/release/libs/numeric/>
- ADOL-C <https://projects.coin-or.org/ADOL-C>
- CMake <http://www.cmake.org>
- ParaView <http://www.paraview.org>

\section legal_stuff Legal stuff

MoFEM is free software: you can redistribute it and/or modify it under the terms
of the GNU Lesser General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

MoFEM is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with MoFEM. If not, see <http://www.gnu.org/licenses/>

\section contributors Contributors list

MoFEM is copyright by Lukasz Kaczmarczyk (Lukasz.Kaczmarczyk at glasgow.ac.uk)
and has received contributions by several people. MoFEM can be used freely for
educational, research or commercial purposes by other institutions.

Users modules are not part of MoFEM library and can be created privately,
independently form MoFEM developers. User modules may follow different license
agreement and copyrights. However, all users modules which are created at Glasgow
University are under the same license agreement as main MoFEM library.

List is generated automatically at time when documentation is build based on
contributions to main git repository. Note that particular module can have
separate contributors list. If one author uses more than one name the same person
can appear more than once.

Detailed git-statistic for core lib only <http://mofem.eng.gla.ac.uk/mofem/html/git-stats>

\verbinclude doc/contributors_list
\verbinclude users_modules/doc/contributors_list_modules

List is generated with command,
\code
git shortlog -s -e -n
\endcode

Note that contributions to forked module are not on the list.

*/
